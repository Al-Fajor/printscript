@startuml

interface SyntaxAnalyzer{
    +analyze(List<Token> tokens): SyntaxResult
}
class SyntaxAnalyzerImpl implements SyntaxAnalyzer

interface SentenceBuilder{
    +buildSentence(List<Token> tokens): AstComponent
}

class LetBuilder implements SentenceBuilder
class IfBuilder implements SentenceBuilder
class ReassignationBuilder implements SentenceBuilder
class ElseBuilder implements SentenceBuilder
class FunctionCallBuilder implements SentenceBuilder

interface SyntaxResult{
    +isFailure(): boolean
    +getComponents(): List<AstComponent>
}

class SyntaxError implements SyntaxResult
class SyntaxSuccess implements SyntaxResult{
-components: List<AstComponent>
}

interface AstComponent

interface SentenceValidator{
    +isValidSentence(List<Token> tokens): boolean
}

class LetSentenceValidator implements SentenceValidator
class FunctionSentenceValidator implements SentenceValidator

'Relations
SyntaxAnalyzer --> AstComponent
SyntaxAnalyzer --> SentenceBuilder
SentenceValidator <- SentenceBuilder
SyntaxAnalyzer --> SyntaxResult
@enduml